{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/benhowarth/Desktop/iPatchNext/components/Table/Table.js\";\nimport styles from './Table.module.css';\n\nconst Table = ({\n  className,\n  data,\n  columns\n}) => {\n  let tableClassName = styles.table;\n\n  if (className) {\n    tableClassName = `${tableClassName} ${className}`;\n  }\n\n  const rows = [...new Array(data.length)].map((item, index) => {\n    return columns.map(({\n      columnId\n    }) => data[index][columnId]);\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: tableClassName,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: columns.map(({\n          columnId,\n          Header\n        }) => {\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            children: Header\n          }, columnId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: rows.map((row, index) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map((cell, index) => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: cell\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 24\n            }, this);\n          })\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Table;","map":{"version":3,"sources":["/Users/benhowarth/Desktop/iPatchNext/components/Table/Table.js"],"names":["styles","Table","className","data","columns","tableClassName","table","rows","Array","length","map","item","index","columnId","Header","row","cell"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,IAAb;AAAmBC,EAAAA;AAAnB,CAAD,KAAkC;AAC9C,MAAIC,cAAc,GAAGL,MAAM,CAACM,KAA5B;;AAEA,MAAKJ,SAAL,EAAiB;AACfG,IAAAA,cAAc,GAAI,GAAEA,cAAe,IAAGH,SAAU,EAAhD;AACD;;AAED,QAAMK,IAAI,GAAG,CAAC,GAAG,IAAIC,KAAJ,CAAUL,IAAI,CAACM,MAAf,CAAJ,EAA4BC,GAA5B,CAAgC,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC5D,WAAOR,OAAO,CAACM,GAAR,CAAY,CAAC;AAAEG,MAAAA;AAAF,KAAD,KAAkBV,IAAI,CAACS,KAAD,CAAJ,CAAYC,QAAZ,CAA9B,CAAP;AACD,GAFY,CAAb;AAIA,sBACE;AAAO,IAAA,SAAS,EAAER,cAAlB;AAAA,4BACE;AAAA,6BACE;AAAA,kBACGD,OAAO,CAACM,GAAR,CAAY,CAAC;AAAEG,UAAAA,QAAF;AAAYC,UAAAA;AAAZ,SAAD,KAA0B;AACrC,8BACE;AAAA,sBAAqBA;AAArB,aAASD,QAAT;AAAA;AAAA;AAAA;AAAA,kBADF;AAGD,SAJA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAA,gBACGN,IAAI,CAACG,GAAL,CAAS,CAACK,GAAD,EAAMH,KAAN,KAAgB;AACxB,4BACE;AAAA,oBACIG,GAAG,CAACL,GAAJ,CAAQ,CAACM,IAAD,EAAOJ,KAAP,KAAiB;AACzB,gCAAO;AAAA,wBAAkBI;AAAlB,eAASJ,KAAT;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAFC;AADJ,WAASA,KAAT;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OARA;AADH;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAnCD;;AAqCA,eAAeX,KAAf","sourcesContent":["import styles from './Table.module.css';\n\nconst Table = ({ className, data, columns }) => {\n  let tableClassName = styles.table;\n\n  if ( className ) {\n    tableClassName = `${tableClassName} ${className}`\n  }\n\n  const rows = [...new Array(data.length)].map((item, index) => {\n    return columns.map(({ columnId }) => data[index][columnId]);\n  });\n\n  return (\n    <table className={tableClassName}>\n      <thead>\n        <tr>\n          {columns.map(({ columnId, Header }) => {\n            return (\n              <td key={columnId}>{ Header }</td>\n            )\n          })}\n        </tr>\n      </thead>\n      <tbody>\n        {rows.map((row, index) => {\n          return (\n            <tr key={index}>\n              { row.map((cell, index) => {\n                return <td key={index}>{ cell }</td>\n              })}\n            </tr>\n          )\n        })}\n      </tbody>\n    </table>\n  )\n}\n\nexport default Table;"]},"metadata":{},"sourceType":"module"}