{"version":3,"file":"react.esm.js","sources":["../src/utils/useIsomorphicLayoutEffect.tsx","../src/FormiumLogic.tsx","../src/inputs.tsx","../src/utils/useSessionStorage.tsx","../src/FormiumForm.tsx"],"sourcesContent":["/**\n * Copyright (c) Formium, Inc. and its affiliates.\n *\n * This source code is licensed under the Business Source License license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\nimport * as React from 'react';\nimport { canUseDOM } from '@formium/utils';\n\n// @see https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\nexport const useIsomorphicLayoutEffect = canUseDOM()\n  ? React.useLayoutEffect\n  : React.useEffect;\n","/**\n * Copyright (c) Formium, Inc. and its affiliates.\n *\n * This source code is licensed under the Business Source License found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as React from 'react';\nimport { useFormikContext, getIn, FormikTouched, FormikValues } from 'formik';\nimport {\n  FormElementActionAction,\n  FormElementAction,\n  FormElementActionDetailsToType,\n  Form,\n  FormSchema,\n  FormElement,\n  FormElementType,\n} from '@formium/types';\nimport { evaluateLogic, LogicCondition } from '@formium/eval';\n\nexport interface FormiumLogicProps {\n  element: FormElement;\n}\n\nconst makeResolver = (values: any) => (path: any) => {\n  return getIn(values, path);\n};\n\nconst shouldExecuteAction = (\n  valuesMap: Record<string, unknown>,\n  touched: FormikTouched<any>,\n  element: FormElement,\n  condition: FormElementAction['condition']\n) => {\n  if (\n    element.type === FormElementType.RADIO ||\n    element.type === FormElementType.CHECKBOX\n  ) {\n    return evaluateLogic(makeResolver(valuesMap), condition as LogicCondition);\n  } else if (getIn(touched, element.slug)) {\n    return evaluateLogic(makeResolver(valuesMap), condition as LogicCondition);\n  }\n  return false;\n};\n\nexport function getChoiceMap(fields: FormSchema['fields']) {\n  let items: Record<string, string> = {};\n  Object.values(fields)\n    .filter(i => i.type === FormElementType.CHOICE)\n    .reduce((prev, curr) => {\n      prev[curr.id] = curr;\n      return prev;\n    }, {} as Record<string, unknown>);\n  return items;\n}\nfunction usePrevious(value: any) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = React.useRef();\n\n  // Store current value in ref\n  React.useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\nexport const unstable_FormiumLogic = React.memo<{\n  form: Form;\n  element: FormElement;\n  setFieldProperty: (name: string, partial: Partial<FormElement>) => void;\n}>(({ form, element, setFieldProperty }) => {\n  const { values, touched } = useFormikContext<FormikValues>();\n  const { schema: { fields } = {} } = form;\n\n  const valuesMap = React.useMemo<Record<string, unknown>>(\n    () =>\n      Object.values(fields || {}).reduce((prev, curr) => {\n        if (curr.type === FormElementType.CHOICE) {\n          prev[curr.slug] = curr.title;\n        } else if (\n          curr.type !== FormElementType.PAGE &&\n          curr.type !== FormElementType.GROUP\n        ) {\n          prev[curr.id] = values[curr.slug];\n        }\n        return prev as Record<string, unknown>;\n      }, {} as any),\n    [values]\n  );\n\n  const previous = usePrevious(valuesMap);\n  React.useEffect(() => {\n    if (\n      element.actions &&\n      element.actions.length > 0 &&\n      element.actions.forEach\n    ) {\n      element.actions.forEach((item: FormElementAction) => {\n        // Field-level actions\n        if (item.details.to.type === FormElementActionDetailsToType.FIELD) {\n          // hide\n          if (item.action === FormElementActionAction.HIDE) {\n            setFieldProperty(item.details.to.value, {\n              hidden: shouldExecuteAction(\n                valuesMap,\n                touched,\n                element,\n                item.condition\n              )\n                ? true\n                : false,\n            });\n          }\n\n          // show\n          if (item.action === FormElementActionAction.SHOW) {\n            setFieldProperty(item.details.to.value, {\n              hidden: shouldExecuteAction(\n                valuesMap,\n                touched,\n                element,\n                item.condition\n              )\n                ? false\n                : true,\n            });\n          }\n        }\n      });\n    }\n  }, [valuesMap, setFieldProperty, previous, touched]);\n  return null;\n});\n\nunstable_FormiumLogic.displayName = 'FormiumLogic';\n","/**\n * Copyright (c) Formium, Inc. and its affiliates.\n *\n * This source code is licensed under the Business Source License license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nimport React from 'react';\n\n/**\n * @public\n */\nexport interface BaseInputProps {\n  /** The unique identifier of the question. */\n  id: string;\n  /** The administrative key for the field. */\n  name: string;\n  /** Whether or not the field is required. */\n  required: boolean;\n  /** Whether or not the field is disabled. */\n  disabled: boolean;\n  /** Change event handler. Use event.target.value for new value. */\n  onChange: React.FormEventHandler;\n  /** Event handler invoked when input is blurred. */\n  onBlur: React.FormEventHandler;\n  /** Event handler invoked when input is focused. */\n  onFocus: React.FormEventHandler;\n  /** Form value of the input, for controlled usage. */\n  value: string;\n  /** Input placeholder value */\n  placeholder?: string;\n}\n\n/**\n * @public\n */\nexport interface TextInputProps extends BaseInputProps {\n  /** HTML `input` type attribute. */\n  type: string;\n}\n\n/**\n * @public\n */\nexport interface TextareaProps extends BaseInputProps {\n  /** Number of `textarea` rows */\n  rows: 5;\n}\n\nexport const TextInput = React.memo<TextInputProps>(function TextInput(props) {\n  return <input {...props} type=\"text\" placeholder=\"Type your answer here\" />;\n});\n\nexport const Textarea = React.memo<TextareaProps>(function Textarea(props) {\n  return <textarea {...props} rows={5} placeholder=\"Type your answer here\" />;\n});\n\n/**\n * @public\n */\nexport interface ControlProps {\n  /** Event handler invoked when input value is changed.  */\n  onChange: React.FormEventHandler;\n  /** Event handler invoked when input is blurred.  */\n  onBlur: React.FormEventHandler;\n  /** Whether the control is checked. */\n  checked: boolean;\n  /** Whether or not the field is disabled. */\n  disabled: boolean;\n  /** Text label for the control. */\n  label: React.ReactNode;\n  /** The administrative key for the field. */\n  name: string;\n  /** Value of the control. */\n  value: string;\n  /** Unique identifier of the control. */\n  id: string;\n}\n\nexport const Checkbox = React.memo<CheckboxProps>(function Checkbox(props) {\n  return (\n    <div>\n      <input\n        id={props.id}\n        type=\"checkbox\"\n        value={props.value}\n        checked={props.checked}\n        onChange={props.onChange}\n        onBlur={props.onBlur}\n        disabled={props.disabled}\n      />\n      <label htmlFor={props.id}>{props.label}</label>\n    </div>\n  );\n});\n\nexport const Radio = React.memo<RadioProps>(function Radio(props) {\n  return (\n    <div>\n      <input\n        id={props.id}\n        type=\"radio\"\n        value={props.value}\n        checked={props.checked}\n        onChange={props.onChange}\n        onBlur={props.onBlur}\n        disabled={props.disabled}\n      />\n      <label htmlFor={props.id}>{props.label}</label>\n    </div>\n  );\n});\n\n/**\n * An interface for an option in a list, such as in a `<select>` or `RadioGroup`.\n * The idea is that these props can be spread directly to an `<option>` or `<Radio>` element.\n *\n * @public\n */\nexport interface OptionProps {\n  /** Unique identifier of the option */\n  id: string;\n  /** Whether this option is non-interactive. */\n  disabled?: boolean;\n\n  /** Label text for this option. If omitted, `value` is used as the label. */\n  label: string;\n\n  /** Value of this option. */\n  value: string | number;\n}\n\n/** @public */\nexport type RadioProps = ControlProps;\n\n/** @public */\nexport type CheckboxProps = ControlProps;\n\n/**\n * @public\n */\nexport interface RadioGroupProps {\n  /** Unique identifier field. */\n  id: string;\n  /**\n   * Whether the group and _all_ its radios are disabled.\n   */\n  disabled: boolean;\n\n  /**\n   * Whether the group is required.\n   */\n  required: boolean;\n\n  /** Optional label text to display above the radio buttons. */\n  // label?: React.ReactNode;\n\n  /**\n   * Name of the group (i.e. the administrative key), used to link radio buttons together in HTML.\n   */\n  name: string;\n\n  /**\n   * Callback invoked when the currently selected radio changes.\n   * Use `event.target.value` to read the currently selected value.\n   */\n  onChange: (event: React.SyntheticEvent) => void;\n\n  /**\n   * Event handler invoked when input is blurred.\n   */\n  onBlur: (event: React.SyntheticEvent) => void;\n  /**\n   * Array of options to render in the group.\n   */\n  options: OptionProps[];\n\n  /** Value of the selected radio. The child with this value will be `:checked`. */\n  value: string;\n}\n","/**\n * Copyright (c) Formium, Inc. and its affiliates.\n *\n * This source code is licensed under the Business Source License found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable */\nimport { useEffect, useState } from 'react';\nimport { canUseDOM } from '@formium/utils';\n\ntype parserOptions<T> =\n  | {\n      raw: true;\n    }\n  | {\n      raw: false;\n      serializer: (value: T) => string;\n      deserializer: (value: string) => T;\n    };\n\nexport const useStorage = <T,>(\n  key: string,\n  initialValue?: T,\n  options?: parserOptions<T>\n): [T, React.Dispatch<React.SetStateAction<T>>] => {\n  if (!canUseDOM) {\n    return [initialValue as T, () => {}];\n  }\n\n  // Use provided serializer/deserializer or the default ones\n  const serializer = options\n    ? options.raw\n      ? String\n      : options.serializer\n    : JSON.stringify;\n  const deserializer = options\n    ? options.raw\n      ? String\n      : options.deserializer\n    : JSON.parse;\n\n  const [state, setState] = useState<T>(() => {\n    try {\n      const sessionStorageValue = sessionStorage.getItem(key);\n      if (sessionStorageValue !== null) {\n        return deserializer(sessionStorageValue);\n      } else {\n        initialValue && sessionStorage.setItem(key, serializer(initialValue));\n        return initialValue;\n      }\n    } catch {\n      // If user is in private mode or has storage restriction\n      // sessionStorage can throw. JSON.parse and JSON.stringify\n      // can throw, too.\n      return initialValue;\n    }\n  });\n\n  useEffect(() => {\n    try {\n      sessionStorage.setItem(key, serializer(state));\n    } catch {\n      // If user is in private mode or has storage restriction\n      // sessionStorage can throw. Also JSON.stringify can throw.\n    }\n  }, [state]);\n\n  return [state, setState];\n};\n","/**\n * Copyright (c) Formium, Inc. and its affiliates.\n *\n * This source code is licensed under the Business Source License found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Form, FormElement, FormElementType } from '@formium/types';\nimport { canUseDOM } from '@formium/utils';\nimport {\n  Field,\n  Form as FormikForm,\n  FormikConfig,\n  FormikContext,\n  FormikValues,\n  useFormik,\n  useFormikContext,\n} from 'formik';\nimport * as React from 'react';\nimport * as Yup from 'yup';\nimport { useIsomorphicLayoutEffect } from './utils/useIsomorphicLayoutEffect';\nimport { unstable_FormiumLogic as FormiumLogic } from './FormiumLogic';\nimport {\n  Checkbox,\n  ControlProps,\n  Radio,\n  RadioGroupProps,\n  Textarea,\n  TextareaProps,\n  TextInput,\n  TextInputProps,\n} from './inputs';\nimport { useStorage } from './utils/useSessionStorage';\n\nconst SubmitButton: React.FC<JSX.IntrinsicElements['button']> = props => {\n  return <button type=\"submit\" {...props} />;\n};\n\nconst NextButton: React.FC<JSX.IntrinsicElements['button']> = props => {\n  return <button type=\"button\" {...props} />;\n};\n\nfunction Header({ page, pageIndex }: { page: FormElement; pageIndex: number }) {\n  return (\n    <>\n      {page.title ? (\n        pageIndex === 0 ? (\n          <h1>{page.title}</h1>\n        ) : (\n          <h2>{page.title}</h2>\n        )\n      ) : null}\n      {page.description ? <p>{page.description}</p> : null}\n    </>\n  );\n}\n\n/**\n * Formium Form options\n * @public\n */\nexport interface FormiumFormProps<V> {\n  /**\n   * A Formium Form (returned from an API Client)\n   */\n  data: Form;\n  /**\n   * Submission callback handler. This function is called when the\n   * form is valid and a submission is attempted by pressing\n   * the submit button on the last page of the form.\n   */\n  onSubmit: (values: V) => Promise<void>;\n  /**\n   * Custom component overrides. When specified, these will be used\n   * instead of the default components for rendering respective inputs.\n   *\n   * @default defaultComponents\n   */\n  components?: FormiumComponents;\n}\n\nexport interface FormiumComponents {\n  SubmitButton: React.ComponentType<JSX.IntrinsicElements['button']>;\n  PreviousButton: React.ComponentType<JSX.IntrinsicElements['button']>;\n  NextButton: React.ComponentType<JSX.IntrinsicElements['button']>;\n  Header: any;\n  PageWrapper: any;\n  ElementsWrapper: any;\n  FooterWrapper: any;\n  FieldWrapper: any;\n  FormControl: React.ComponentType<FormControlProps>;\n  TextInput: React.ComponentType<TextInputProps>;\n  Textarea: React.ComponentType<TextareaProps>;\n  Checkbox: React.ComponentType<ControlProps>;\n  Radio: React.ComponentType<ControlProps>;\n  RadioGroup?: React.ComponentType<RadioGroupProps>;\n}\n\nexport interface FormControlProps {\n  /**\n   * Whether field should appear as non-interactive.\n   * Remember that `input` elements must be disabled separately.\n   */\n  disabled: boolean;\n\n  /**\n   * Whether field is required\n   */\n  required: boolean;\n\n  /**\n   * Label of this field.\n   */\n  label?: React.ReactNode;\n\n  /**\n   * `id` attribute of the field that this `FormControl` controls,\n   * used as `<label htmlFor>` attribute.\n   */\n  labelFor?: string;\n\n  /**\n   * Optional helper text.\n   */\n  description?: React.ReactNode;\n\n  /**\n   * Error message (if present) and the current field has been visited, otherwise this will be undefined.\n   */\n  error?: React.ReactNode;\n\n  /**\n   * React children. This is where actual field implementation will be rendered.\n   */\n  children?: React.ReactNode;\n}\n\nconst FormControl = React.memo<FormControlProps>(function FormControl({\n  children,\n  description,\n  error,\n  label,\n  labelFor,\n}) {\n  return (\n    <div>\n      {label && <label htmlFor={labelFor}>{label}</label>}\n      {description && <div>{description}</div>}\n      {children}\n      {error && <div>{error}</div>}\n    </div>\n  );\n});\n\nexport const defaultComponents: FormiumComponents = {\n  SubmitButton,\n  NextButton,\n  PreviousButton: NextButton,\n  Header,\n  ElementsWrapper: ({ children }: any) => children,\n  PageWrapper: ({ children }: any) => children,\n  FooterWrapper: ({ children }: any) => children,\n  FieldWrapper: (props: any) => <div {...props} />,\n  FormControl,\n  TextInput,\n  Textarea,\n  Radio,\n  Checkbox,\n};\n\nconst Page: React.FC<any> = ({ children }) => children;\n\nPage.displayName = 'FormiumPage';\n\n/**\n * Return the list of \"input\" elements from a form. This is every element\n * except for Groups, Pages, and Choices.\n *\n * @param form A formium form\n * @public\n * @alpha\n */\nexport const getElementsFromForm = (form?: Form) => {\n  if (!form) {\n    return [];\n  }\n  if (!form.schema?.fields) {\n    return [];\n  }\n\n  return Object.values(form.schema.fields).filter(\n    i =>\n      i.type !== FormElementType.GROUP &&\n      i.type !== FormElementType.PAGE &&\n      i.type !== FormElementType.CHOICE\n  );\n};\n\n/**\n * Return a Yup object schema based on a list of form elements.\n *\n * @param inputElements - An array of expanded FormElements\n * @returns A Yup schema\n * @public\n * @alpha\n */\nexport function getValidationSchema(inputElements?: FormElement[]) {\n  return Yup.object(\n    inputElements &&\n      inputElements.reduce((prev: any, curr: any) => {\n        let validation;\n        if (curr.hidden) {\n          return prev;\n        }\n        // @todo make this a switch\n        if (curr.type === FormElementType.CHECKBOX) {\n          validation = Yup.array().of(Yup.string());\n        } else if (\n          curr.type === FormElementType.RADIO &&\n          curr.children &&\n          curr.children.length > 0\n        ) {\n          validation = Yup.string();\n          if (!curr.allowOther) {\n            validation = validation.oneOf(\n              curr.children.map((c: any) => c.title)\n            );\n          }\n        } else if (\n          curr.type === FormElementType.SHORT_TEXT ||\n          curr.type === FormElementType.LONG_TEXT\n        ) {\n          validation = Yup.string();\n          if (curr.maxLength) {\n            validation = validation.max(\n              curr.maxLength,\n              `Must be less than ${curr.maxLength}`\n            );\n          }\n        } else if (curr.type === FormElementType.EMAIL) {\n          validation = Yup.string().email('Invalid email');\n          if (curr.maxLength) {\n            validation = validation.max(\n              curr.maxLength,\n              `Must be less than ${curr.maxLength} characters`\n            );\n          }\n        } else if (curr.type === FormElementType.PHONE_NUMBER) {\n          validation = Yup.string();\n          if (curr.maxLength) {\n            validation = validation.max(\n              curr.maxLength,\n              `Must be less than ${curr.maxLength} characters`\n            );\n          }\n        } else if (curr.type === FormElementType.DATE) {\n          validation = Yup.date();\n        } else if (curr.type === FormElementType.TIME) {\n          validation = Yup.string();\n        } else if (curr.type === FormElementType.URL) {\n          validation = Yup.string().url('Invalid URL');\n          if (curr.maxLength) {\n            validation = validation.max(\n              curr.maxLength,\n              `Must be less than ${curr.maxLength} characters`\n            );\n          }\n        } else if (curr.type === FormElementType.BOOLEAN) {\n          validation = Yup.boolean();\n        } else if (curr.type === FormElementType.NUMBER) {\n          validation = Yup.number();\n          if (curr.minValue) {\n            validation = validation.min(\n              curr.minValue,\n              `Must be greater than ${curr.minValue}`\n            );\n          }\n          if (curr.maxValue) {\n            validation = validation.max(\n              curr.maxValue,\n              `Must be less than ${curr.maxValue}`\n            );\n          }\n        }\n\n        if (curr.required) {\n          // @todo fix type\n          validation = (validation as any).required(\n            curr.requiredText ?? 'This question requires an answer.'\n          );\n        }\n\n        // @todo fix type\n        (prev as any)[curr.slug] = validation;\n        return prev;\n      }, {})\n  );\n}\n\ntype NestedField = FormElement & { children?: FormElement[] };\n\n/**\n * Return initial values given an array of form elements (i.e. like on a page)\n *\n * @param inputElements - An array of expanded FormElements\n * @typeParam Values - The shape of the values of your form (an object with keys matching those specified in the dashboard)\n * @returns Initial values for the array of elements / page. This does not include values set by dynamic population.\n * @public\n */\nexport function getInitialValues<Values>(inputElements: FormElement[]): Values {\n  return inputElements.reduce((prev: any, curr: FormElement) => {\n    if (curr.type === FormElementType.CHECKBOX) {\n      (prev as any)[curr.slug] = [];\n    } else {\n      (prev as any)[curr.slug] = curr.defaultValue ?? '';\n    }\n    return prev;\n  }, {} as Values);\n}\n\nfunction denormalize(arr: string[], get: (id: string) => any): NestedField[] {\n  return (\n    arr &&\n    arr.map(id => {\n      const el = get(id);\n      return {\n        ...el,\n        ...(el.items && el.items.length > 0\n          ? { children: denormalize(el.items, get) }\n          : {}),\n      };\n    })\n  );\n}\n\nconst FormControlWrapper = React.memo<\n  {\n    component: FormiumComponents['FormControl'];\n    name: string;\n  } & FormControlProps\n>(({ component: Comp, name, ...props }) => {\n  const formik = useFormikContext();\n  const { error, touched } = formik.getFieldMeta(name);\n  return <Comp {...props} error={!!touched && !!error && error} />;\n});\n\n/**\n * @public\n */\nexport function FormiumForm<Values extends FormikValues = FormikValues>({\n  data: _data,\n  components = defaultComponents,\n  ...props\n}: FormiumFormProps<Values>) {\n  const [form, setForm] = React.useState<Form>(_data);\n  const children = denormalize(\n    form?.schema?.pageIds ?? [],\n    (id: string) => form?.schema?.fields[id]\n  );\n  const initialValues: Values = getInitialValues(getElementsFromForm(form));\n  const setFieldProperty = React.useCallback(\n    (id: string, partial: Partial<FormElement>) => {\n      setForm((f: Form) => ({\n        ...f,\n        schema: {\n          ...(f.schema ?? {}),\n          fields: {\n            ...(f.schema?.fields ?? {}),\n            [id]: {\n              ...(f.schema?.fields[id] ?? {}),\n              ...partial,\n            } as FormElement,\n          },\n        },\n      }));\n    },\n    [setForm]\n  );\n\n  return (\n    <FormikWizard\n      components={components}\n      initialValues={initialValues}\n      data={_data}\n      {...props}\n    >\n      {children &&\n        children.map((page: NestedField, pageIndex: number) => (\n          <Page\n            key={page.id}\n            validationSchema={getValidationSchema(\n              children![pageIndex].children!\n            )}\n          >\n            <components.PageWrapper>\n              <components.Header\n                form={form}\n                page={page}\n                pageIndex={pageIndex}\n              />\n              <components.ElementsWrapper>\n                {page.children &&\n                  page.children.map((element: NestedField, index: number) => {\n                    const {\n                      id,\n                      children,\n                      actions,\n                      items,\n                      hidden,\n                      required,\n                      requiredText,\n                      defaultValue,\n                      placeholder,\n                      ...item\n                    } = element;\n                    if (hidden) {\n                      return null;\n                    }\n                    return (\n                      <components.FieldWrapper key={id}>\n                        <FormiumLogic\n                          form={form}\n                          element={element}\n                          setFieldProperty={setFieldProperty}\n                        />\n\n                        {item.type === FormElementType.SHORT_TEXT ? (\n                          <FormControlWrapper\n                            required={!!required}\n                            label={item.title!}\n                            labelFor={id}\n                            name={item.slug}\n                            description={item.description}\n                            component={components.FormControl}\n                            disabled={false}\n                          >\n                            <Field\n                              as={components.TextInput}\n                              name={item.slug}\n                              placeholder={placeholder}\n                              required={required}\n                              disabled={false}\n                              id={id}\n                              type=\"text\"\n                            />\n                          </FormControlWrapper>\n                        ) : item.type === FormElementType.EMAIL ? (\n                          <FormControlWrapper\n                            required={!!required}\n                            label={item.title!}\n                            labelFor={id}\n                            name={item.slug}\n                            description={item.description}\n                            component={components.FormControl}\n                            disabled={false}\n                          >\n                            <Field\n                              as={components.TextInput}\n                              name={item.slug}\n                              placeholder={placeholder}\n                              required={required}\n                              id={id}\n                              type=\"email\"\n                            />\n                          </FormControlWrapper>\n                        ) : item.type === FormElementType.URL ? (\n                          <FormControlWrapper\n                            required={!!required}\n                            label={item.title!}\n                            labelFor={id}\n                            name={item.slug}\n                            description={item.description}\n                            component={components.FormControl}\n                            disabled={false}\n                          >\n                            <Field\n                              as={components.TextInput}\n                              name={item.slug}\n                              placeholder={placeholder}\n                              required={required}\n                              id={id}\n                              type=\"url\"\n                            />\n                          </FormControlWrapper>\n                        ) : item.type === FormElementType.RADIO ? (\n                          <FormControlWrapper\n                            required={!!required}\n                            label={item.title!}\n                            labelFor={id}\n                            name={item.slug}\n                            description={item.description}\n                            component={components.FormControl}\n                            disabled={false}\n                          >\n                            {components.RadioGroup ? (\n                              <Field\n                                as={components.RadioGroup}\n                                id={id}\n                                name={item.slug}\n                                required={!!required}\n                                disabled={false}\n                                options={\n                                  children &&\n                                  children.length > 0 &&\n                                  children.map((c: any) => ({\n                                    id: c.id,\n                                    disabled: false,\n                                    label: c.title,\n                                    value: c.title,\n                                  }))\n                                }\n                              />\n                            ) : (\n                              <>\n                                {children &&\n                                  children.length > 0 &&\n                                  children.map((c: any) => (\n                                    <div key={c.id}>\n                                      <Field\n                                        as={components.Radio}\n                                        value={c.title}\n                                        label={c.title}\n                                        type=\"radio\"\n                                        name={item.slug}\n                                        id={c.id}\n                                      />\n                                    </div>\n                                  ))}\n                              </>\n                            )}\n                          </FormControlWrapper>\n                        ) : item.type === FormElementType.CHECKBOX ? (\n                          <>\n                            <FormControlWrapper\n                              required={!!required}\n                              label={item.title!}\n                              labelFor={id}\n                              name={item.slug}\n                              description={item.description}\n                              component={components.FormControl}\n                              disabled={false}\n                            >\n                              {children &&\n                                children.length > 0 &&\n                                children.map((c: any) => (\n                                  <div key={c.id}>\n                                    <Field\n                                      as={components.Checkbox}\n                                      role=\"checkbox\"\n                                      value={c.title}\n                                      label={c.title}\n                                      type=\"checkbox\"\n                                      name={item.slug}\n                                      id={c.id}\n                                    />\n                                  </div>\n                                ))}\n                            </FormControlWrapper>\n                          </>\n                        ) : item.type === FormElementType.LONG_TEXT ? (\n                          <FormControlWrapper\n                            required={!!required}\n                            label={item.title!}\n                            labelFor={id}\n                            name={item.slug}\n                            description={item.description}\n                            component={components.FormControl}\n                            disabled={false}\n                          >\n                            <Field\n                              as={components.Textarea}\n                              name={item.slug}\n                              placeholder={placeholder}\n                              required={required}\n                              id={id}\n                            />\n                          </FormControlWrapper>\n                        ) : null}\n                      </components.FieldWrapper>\n                    );\n                  })}\n              </components.ElementsWrapper>\n            </components.PageWrapper>\n          </Page>\n        ))}\n    </FormikWizard>\n  );\n}\nconst getFormPageStorageKey = (id: string) => `formium-${id}-form-page`;\nconst getFormStateStorageKey = (id: string) => `formium-${id}-form-state`;\n\nfunction FormikWizard<Values extends FormikValues = FormikValues>({\n  initialValues,\n  children,\n  onSubmit,\n  components = defaultComponents,\n  debug,\n  ...props\n}: FormikConfig<Values> &\n  FormiumFormProps<Values> & {\n    debug?: boolean;\n  }) {\n  const { id } = props.data;\n  const pageStorageKey = React.useMemo(() => getFormPageStorageKey(id), [id]);\n  const stateStorageKey = React.useMemo(() => getFormStateStorageKey(id), [id]);\n  const [page, setPage] = useStorage(pageStorageKey, 0);\n  const [values, setValues] = React.useState(initialValues || {});\n  const next = React.useCallback(\n    newValues => {\n      if (children) {\n        setPage(p =>\n          Math.min(p + 1, React.Children.toArray(children).length - 1)\n        );\n        setValues(newValues);\n      }\n    },\n    [setPage, setValues, children]\n  );\n  const previous = React.useCallback(() => {\n    setPage(p => Math.max(p - 1, 0));\n  }, [setPage]);\n\n  const validationSchema = React.useCallback(\n    v => {\n      const activePage: any = React.Children.toArray(children)[page];\n      return activePage.props.validationSchema\n        ? activePage.props.validationSchema\n        : {};\n    },\n    [children, page]\n  );\n\n  const handleSubmit = React.useCallback(\n    async (currentValues, formikActions) => {\n      const isLastPage = page === React.Children.count(children) - 1;\n\n      if (isLastPage) {\n        return onSubmit(currentValues).then(() => {\n          sessionStorage.removeItem(pageStorageKey);\n          sessionStorage.removeItem(stateStorageKey);\n        });\n      } else {\n        formikActions.setTouched({});\n        next(currentValues);\n        return;\n      }\n    },\n    [page, children, onSubmit, pageStorageKey, stateStorageKey, next]\n  );\n  const activePage = React.Children.toArray(children)[page];\n  const isLastPage = page === React.Children.count(children) - 1;\n  const formik = useFormik({\n    initialValues: values as any,\n    onSubmit: handleSubmit,\n    // enableReinitialize: true,\n    validationSchema,\n    ...props,\n  });\n\n  const {\n    setFormikState,\n    values: formikValues,\n    touched,\n    errors,\n    initialValues: formikInitialValues,\n  } = formik;\n\n  React.useEffect(() => {\n    if (canUseDOM()) {\n      sessionStorage.setItem(\n        stateStorageKey,\n        JSON.stringify({\n          values: formikValues,\n          touched,\n          initialValues: formikInitialValues,\n        })\n      );\n    }\n  }, [formikValues, touched, errors, formikInitialValues, stateStorageKey]);\n\n  useIsomorphicLayoutEffect(() => {\n    try {\n      const maybeF = sessionStorage.getItem(stateStorageKey);\n      if (maybeF) {\n        const newState = JSON.parse(maybeF);\n        setFormikState(newState);\n      }\n    } catch (_error) {}\n  }, [setFormikState, stateStorageKey]);\n\n  return (\n    <FormikContext.Provider value={formik}>\n      <FormikForm>\n        <>\n          <components.PageWrapper>\n            {activePage}\n            <components.FooterWrapper>\n              {page > 0 && (\n                <components.PreviousButton type=\"button\" onClick={previous}>\n                  Back\n                </components.PreviousButton>\n              )}\n              {!isLastPage && (\n                <components.NextButton\n                  type=\"submit\"\n                  disabled={formik.isSubmitting}\n                >\n                  Next\n                </components.NextButton>\n              )}\n              {isLastPage && (\n                <components.SubmitButton\n                  type=\"submit\"\n                  disabled={formik.isSubmitting}\n                >\n                  Submit\n                </components.SubmitButton>\n              )}\n              {debug ? (\n                <>\n                  <pre style={{ marginTop: 12, fontSize: 11 }}>\n                    {JSON.stringify(formik, null, 2)}\n                  </pre>\n                  <pre style={{ fontSize: 11 }}>\n                    {JSON.stringify({ isLastPage }, null, 2)}\n                  </pre>\n                </>\n              ) : null}\n            </components.FooterWrapper>\n          </components.PageWrapper>\n        </>\n      </FormikForm>\n    </FormikContext.Provider>\n  );\n}\n\nFormikWizard.displayName = 'FormiumFormWizard';\n"],"names":["useIsomorphicLayoutEffect","canUseDOM","React","makeResolver","values","path","getIn","shouldExecuteAction","valuesMap","touched","element","condition","type","FormElementType","RADIO","CHECKBOX","evaluateLogic","slug","getChoiceMap","fields","items","Object","filter","i","CHOICE","reduce","prev","curr","id","usePrevious","value","ref","current","unstable_FormiumLogic","form","setFieldProperty","useFormikContext","schema","title","PAGE","GROUP","previous","actions","length","forEach","item","details","to","FormElementActionDetailsToType","FIELD","action","FormElementActionAction","HIDE","hidden","SHOW","displayName","TextInput","memo","props","placeholder","Textarea","rows","Checkbox","checked","onChange","onBlur","disabled","htmlFor","label","Radio","useStorage","key","initialValue","options","serializer","raw","String","JSON","stringify","deserializer","parse","useState","sessionStorageValue","sessionStorage","getItem","setItem","state","setState","useEffect","SubmitButton","NextButton","Header","page","pageIndex","description","FormControl","children","error","labelFor","defaultComponents","PreviousButton","ElementsWrapper","PageWrapper","FooterWrapper","FieldWrapper","Page","getElementsFromForm","getValidationSchema","inputElements","Yup","validation","of","allowOther","oneOf","map","c","SHORT_TEXT","LONG_TEXT","maxLength","max","EMAIL","email","PHONE_NUMBER","DATE","TIME","URL","url","BOOLEAN","NUMBER","minValue","min","maxValue","required","requiredText","getInitialValues","defaultValue","denormalize","arr","get","el","FormControlWrapper","Comp","component","name","formik","getFieldMeta","FormiumForm","_data","data","components","setForm","pageIds","initialValues","partial","f","FormikWizard","validationSchema","index","FormiumLogic","Field","as","RadioGroup","role","getFormPageStorageKey","getFormStateStorageKey","onSubmit","debug","pageStorageKey","stateStorageKey","setPage","setValues","next","newValues","p","Math","toArray","v","activePage","handleSubmit","currentValues","formikActions","isLastPage","count","then","removeItem","setTouched","useFormik","setFormikState","formikValues","errors","formikInitialValues","maybeF","newState","_error","FormikContext","Provider","FormikForm","onClick","isSubmitting","style","marginTop","fontSize"],"mappings":"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"}