{"version":3,"file":"utils.esm.js","sources":["../src/canUseDOM.ts","../src/getOwnerDocument.ts","../src/makeId.ts","../src/toSlug.ts"],"sourcesContent":["/**\n * Copyright (c) Formium, Inc. and its affiliates.\n *\n * This source code is licensed under the Business Source License found in the\n * LICENSE file in the root directory of this source tree.\n */\n/**\n * Can use the DOM?\n * @public\n */\nexport function canUseDOM() {\n  return (\n    typeof window !== 'undefined' &&\n    typeof window.document !== 'undefined' &&\n    typeof window.document.createElement !== 'undefined'\n  );\n}\n","/**\n * Copyright (c) Formium, Inc. and its affiliates.\n *\n * This source code is licensed under the Business Source License found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { canUseDOM } from './canUseDOM';\n\n/**\n * Get an element's owner document. Useful when components are used in iframes\n * or other environments like dev tools.\n *\n * @param element - An HTML element (defaults to document if usable)\n * @public\n */\nexport function getOwnerDocument<T extends HTMLElement = HTMLElement>(\n  element: T | null\n) {\n  return element && element.ownerDocument\n    ? element.ownerDocument\n    : canUseDOM()\n    ? document\n    : null;\n}\n","/**\n * Copyright (c) Formium, Inc. and its affiliates.\n *\n * This source code is licensed under the Business Source License found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Joins strings to format IDs for compound components.\n *\n * @param args - Any number of arguments\n * @public\n */\nexport function makeId(...args: (string | number | null | undefined)[]) {\n  return args.filter(val => val != null).join('--');\n}\n","/**\n * Copyright (c) Formium, Inc. and its affiliates.\n *\n * This source code is licensed under the Business Source License found in the\n * LICENSE file in the root directory of this source tree.\n */\n/**\n * Return a slugified copy of a string.\n *\n * @param str - The string to be slugified\n * @public\n */\nexport function toSlug(str: string): string {\n  let s = str;\n  if (!s) {\n    return '';\n  }\n  s = s.toLowerCase().trim();\n  s = s.replace(/ & /g, ' and ');\n  s = s.replace(/[ ]+/g, '-');\n  s = s.replace(/[-]+/g, '-');\n  s = s.replace(/[^a-z0-9-]+/g, '');\n  s = s.length > 32 ? s.substr(0, 32) : s;\n  return s;\n}\n"],"names":["canUseDOM","window","document","createElement","getOwnerDocument","element","ownerDocument","makeId","args","filter","val","join","toSlug","str","s","toLowerCase","trim","replace","length","substr"],"mappings":"AAAA;;;;;;;AAMA;;;;SAIgBA;AACd,SACE,OAAOC,MAAP,KAAkB,WAAlB,IACA,OAAOA,MAAM,CAACC,QAAd,KAA2B,WAD3B,IAEA,OAAOD,MAAM,CAACC,QAAP,CAAgBC,aAAvB,KAAyC,WAH3C;AAKD;;AChBD;;;;;;AAMA,AAEA;;;;;;;;AAOA,SAAgBC,iBACdC;AAEA,SAAOA,OAAO,IAAIA,OAAO,CAACC,aAAnB,GACHD,OAAO,CAACC,aADL,GAEHN,SAAS,KACTE,QADS,GAET,IAJJ;AAKD;;ACvBD;;;;;;;AAOA;;;;;;AAMA,SAAgBK;oCAAUC;AAAAA,IAAAA;;;AACxB,SAAOA,IAAI,CAACC,MAAL,CAAY,UAAAC,GAAG;AAAA,WAAIA,GAAG,IAAI,IAAX;AAAA,GAAf,EAAgCC,IAAhC,CAAqC,IAArC,CAAP;AACD;;ACfD;;;;;;;AAMA;;;;;;AAMA,SAAgBC,OAAOC;AACrB,MAAIC,CAAC,GAAGD,GAAR;;AACA,MAAI,CAACC,CAAL,EAAQ;AACN,WAAO,EAAP;AACD;;AACDA,EAAAA,CAAC,GAAGA,CAAC,CAACC,WAAF,GAAgBC,IAAhB,EAAJ;AACAF,EAAAA,CAAC,GAAGA,CAAC,CAACG,OAAF,CAAU,MAAV,EAAkB,OAAlB,CAAJ;AACAH,EAAAA,CAAC,GAAGA,CAAC,CAACG,OAAF,CAAU,OAAV,EAAmB,GAAnB,CAAJ;AACAH,EAAAA,CAAC,GAAGA,CAAC,CAACG,OAAF,CAAU,OAAV,EAAmB,GAAnB,CAAJ;AACAH,EAAAA,CAAC,GAAGA,CAAC,CAACG,OAAF,CAAU,cAAV,EAA0B,EAA1B,CAAJ;AACAH,EAAAA,CAAC,GAAGA,CAAC,CAACI,MAAF,GAAW,EAAX,GAAgBJ,CAAC,CAACK,MAAF,CAAS,CAAT,EAAY,EAAZ,CAAhB,GAAkCL,CAAtC;AACA,SAAOA,CAAP;AACD;;;;"}